## Converting the all the columns to factors as they are all ordinal(except the Id, but since it's categorical i'm converting it into a factor too)
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
library(dplyr)
library(ezids)
library(ggplot2)
library(epiR)
FS_Subset <- subset(Food_Sec, HRINTSTA == 001 & HRSUPINT == 001 & HRFS12MD != -9)
FS_Subset <- subset(FS_Subset, select = c("HRHHID",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD", "PRNMCHLD"))
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "States" = "GESTFIPS", "Family_Size" = "HRNUMHOU",	"Household_Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
## Converting the all the columns to factors as they are all ordinal(except the Id, but since it's categorical i'm converting it into a factor too)
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
levels(FS_Subset$'FoodSecurity_score') <- c( "High Food Security", "Marginal Food Security", "Low Food Security", "Very Low Food Security")
summary(FS_Subset$'FoodSecurity_score')
FS_Subset$FS_Status <- FS_Subset$FoodSecurity_score
levels(FS_Subset$FS_Status) <- c( "Food Secure", "Food Secure", "Food Insecure", "Food Insecure")
ggplot(FS_Subset, aes(x= FoodSecurity_score,  y = ..prop.., group = 1)) + geom_bar( fill = "blue") +  geom_text(aes(label = round((..prop..), 2)), stat = "count", hjust = 0, colour = "black") + coord_flip()  + labs(x= " ", y= "Relative Frequency ") +  scale_y_continuous(limits = c(0, 1))
df <- FS_Subset %>%
group_by(FS_Status) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(df, aes(x = "", y = perc, fill = FS_Status)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") + labs(x= " ", y= " ")
levels(FS_Subset$'Ethnicity') <- c('White only', 'Black only', 'American Indian, Alaskan native only', 'Asian Only', 'Hawaiian', 'White-black', 'White-AI', 'White-Asian', 'White-HP', 'Black-AI', 'Black-Asian', 'Black-HP', 'AI-Asian', 'AI-HP', 'Asian-HP', 'W-B-AI', 'W-B-A', 'W-B-HP', 'W-AI-A', 'W-AI-HP', 'W-A-HP', 'B-AI-A', 'W-B-AL-A', 'W-AI-A-HP', 'Other 3 race combo', 'Other 4 and 5 race combo')
summary(FS_Subset$'Ethnicity', title = "PTDTRACE")
summary(FS_Subset$'SNAP', title = "HESP1")
levels(FS_Subset$'Citizenship_status') <- c('NATIVE, BORN IN THE UNITED STATES', 'NATIVE, BORN IN PUERTO RICO OR OTHER U.S. ISLAND AREAS', 'NATIVE, BORN ABROAD OF AMERICAN PARENT OR PARENTS', 'FOREIGN BORN, U.S. CITIZEN BY NATURALIZATION', 'FOREIGN BORN, NOT A CITIZEN OF THE UNITED STATES')
summary(FS_Subset$'Citizenship_status', title = "PRCITSHP")
table(FS_Subset$Ethnicity, FS_Subset$FoodSecurity_score)
for(i in levels(FS_Subset$Ethnicity)){
print(ggplot(subset(FS_Subset, Ethnicity == i ) , aes(x= Ethnicity, color =FS_Status, fill = FS_Status)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge") + labs(x= " ", y= "Percentage "))
}
selected <- c('White only', 'Black only', 'American Indian, Alaskan native only', 'Asian Only', 'Hawaiian', 'White-black', 'White-AI', 'White-Asian', 'White-HP', 'Black-AI')
FS_ss <- FS_Subset[FS_Subset$Ethnicity %in% selected,]
FS_ss <- droplevels(FS_ss)
chi_test <- table(FS_ss$Ethnicity, FS_ss$FS_Status)
chi_test
chisq.test(chi_test)
fisher.test(FS_Subset$Ethnicity, FS_Subset$FoodSecurity_score, simulate.p.value=TRUE)
table(FS_Subset$Citizenship_status, FS_Subset$FoodSecurity_score)
for(i in levels(FS_Subset$Citizenship_status)){
print(ggplot(subset(FS_Subset, Citizenship_status == i ) , aes(x= Citizenship_status, color =FS_Status, fill = FS_Status)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge")+ labs(x= " ", y= "Percentage "))
}
chisq.test(FS_Subset$Citizenship_status, FS_Subset$FoodSecurity_score)
## Only would be considering the levels 1 and 2. here -1, the one with most frequency, means that the response is not in universe. Ideally, I should substitute this but due to time constraints I won't be doing that. -3 and -2 mean refuse to respond and no response.
FS_SNAP <- subset(FS_Subset, FS_Subset$SNAP != -1)
FS_SNAP <- droplevels(FS_SNAP)
levels(FS_SNAP$SNAP) <- c('Refused', 'Dont Know', 'Uses SNAP', 'No SNAP')
table(FS_SNAP$SNAP, FS_SNAP$FoodSecurity_score)
ggplot(FS_SNAP, aes(x = SNAP, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ")
ggplot(FS_SNAP, aes(x = SNAP, fill = FS_Status)) + geom_bar(position = "fill") + labs( x = " " ,y = " ")
chi_test_SNAP <- table(FS_SNAP$SNAP, FS_SNAP$FS_Status)
chi_test_SNAP
chisq.test(chi_test_SNAP)
SNAP_Odds <- droplevels(subset(FS_SNAP, SNAP != "Refused" & SNAP != "Dont Know"))
TAB <- table(SNAP_Odds$SNAP, SNAP_Odds$FS_Status)
TAB
barplot(TAB, beside= T, legend = T)
epi.2by2(TAB, method = "cohort.count")
food_ave <- subset(FS_Subset, select = c("Id",	"Number_of_Jobs",	"Hours_on_Jobs",	"Education_Level", "FoodSecurity_score"))
head(food_ave)
str(food_ave)
food_ave$Number_of_Jobs = as.factor(food_ave$Number_of_Jobs)
food_ave$Education_Level = as.factor(food_ave$Education_Level)
food_ave$FoodSecurity_score = as.factor(food_ave$FoodSecurity_score)
food_ave$Hours_on_Jobs = as.numeric(food_ave$Hours_on_Jobs)
str(food_ave)
levels(food_ave$Education_Level) <- c('Less Than 1st Grade', '1st, 2nd, 3rd Or 4th Grade','5th Or 6th Grade', '7th Or 8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade No Diploma', 'High School Grad-Diploma Or Equiv (Ged)', 'Some College But No Degree', 'Associate Degree-Occupational/Vocational', 'Associate Degree-Academic Program', 'Bachelors Degree','Masters Degree', 'Professional School Deg' , 'Doctorate Degree')
levels(food_ave$Education_Level) <- c('Not Applicable','Less Than 1st Grade', '1st, 2nd, 3rd Or 4th Grade','5th Or 6th Grade', '7th Or 8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade No Diploma', 'High School Grad-Diploma Or Equiv (Ged)', 'Some College But No Degree', 'Associate Degree-Occupational/Vocational', 'Associate Degree-Academic Program', 'Bachelors Degree','Masters Degree', 'Professional School Deg' , 'Doctorate Degree')
summary(food_ave$Education_Level, title = "PEEDUCA")
summary(food_ave$Number_of_Jobs, title = "PEMJNUM")
levels(food_ave$Number_of_Jobs) <- c('Not Applicable', '2 Jobs', '3 Jobs', '4 Jobs')
levels(food_ave$Education_Level) <- c('Not Applicable','Less Than 1st Grade', '1st, 2nd, 3rd Or 4th Grade','5th Or 6th Grade', '7th Or 8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade No Diploma', 'High School Grad-Diploma Or Equiv (Ged)', 'Some College But No Degree', 'Associate Degree-Occupational/Vocational', 'Associate Degree-Academic Program', 'Bachelors Degree','Masters Degree', 'Professional School Deg' , 'Doctorate Degree')
summary(food_ave$Education_Level, title = "PEEDUCA")
levels(food_ave$Number_of_Jobs) <- c('Not Applicable', '2 Jobs', '3 Jobs', '4 Jobs')
summary(food_ave$Number_of_Jobs, title = "PEMJNUM")
food_ave$Number_of_Jobs = as.factor(food_ave$Number_of_Jobs)
food_ave$Education_Level = as.factor(food_ave$Education_Level)
food_ave$FoodSecurity_score = as.factor(food_ave$FoodSecurity_score)
food_ave$Hours_on_Jobs = as.numeric(food_ave$Hours_on_Jobs)
str(food_ave)
plot(food_ave$Number_of_Jobs)
ggplot(food_ave) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
levels(food_ave$Education_Level) <- c('Not Applicable','Less Than 1st Grade', '1st, 2nd, 3rd Or 4th Grade','5th Or 6th Grade', '7th Or 8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade No Diploma', 'High School Grad-Diploma Or Equiv (Ged)', 'Some College But No Degree', 'Associate Degree-Occupational/Vocational', 'Associate Degree-Academic Program', 'Bachelors Degree','Masters Degree', 'Professional School Deg' , 'Doctorate Degree')
summary(food_ave$Education_Level, title = "PEEDUCA")
levels(food_ave$Number_of_Jobs) <- c('Not Applicable', '2 Jobs', '3 Jobs', '4 Jobs or more jobs')
summary(food_ave$Number_of_Jobs, title = "PEMJNUM")
plot(food_ave$Number_of_Jobs)
ggplot(food_ave) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
levels(food_ave$Education_Level) <- c('Not Applicable','Less Than 1st Grade', '1st, 2nd, 3rd Or 4th Grade','5th Or 6th Grade', '7th Or 8th Grade', '9th Grade', '10th Grade', '11th Grade', '12th Grade No Diploma', 'High School Grad-Diploma Or Equiv (Ged)', 'Some College But No Degree', 'Associate Degree-Occupational/Vocational', 'Associate Degree-Academic Program', 'Bachelors Degree','Masters Degree', 'Professional School Deg' , 'Doctorate Degree')
summary(food_ave$Education_Level, title = "PEEDUCA")
levels(food_ave$Number_of_Jobs) <- c('Not Applicable', '2 Jobs', '3 Jobs', '4 or more jobs')
summary(food_ave$Number_of_Jobs, title = "PEMJNUM")
plot(food_ave$Number_of_Jobs)
ggplot(food_ave) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(subset(food_ave, Number_of_Jobs == '2 Jobs' )) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(subset(food_ave, Number_of_Jobs == '3 Jobs')) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(subset(food_ave, Number_of_Jobs == '4 or more Jobs')) +
geom_bar(aes(x = Number_of_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(food_ave, aes(x = Number_of_Jobs, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ")
food_noj <- subset(food_ave, food_ave$Number_of_Jobs != 'Not Applicable)
ggplot(food_noj, aes(x = Number_of_Jobs, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ")
food_noj <- subset(food_ave, food_ave$Number_of_Jobs != 'Not Applicable')
ggplot(food_noj, aes(x = Number_of_Jobs, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ")
food_noj <- subset(food_ave, food_ave$Number_of_Jobs != 'Not Applicable')
ggplot(food_noj, aes(x = Number_of_Jobs, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ", title = "Food Security Score on Number of Jobs")
contable <- table(food_ave$Number_of_Jobs, food_ave$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
contable <- table(food_ave$Number_of_Jobs, food_ave$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
contable <- table(food_noj$Number_of_Jobs, food_noj$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
str(food_noj)
contable <- table(food_noj$Number_of_Jobs, food_noj$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
food_num <- droplevels(subset(food_ave, Number_of_Jobs = "Not Applicable" ))
food_num <- droplevels(subset(food_ave, Number_of_Jobs = "Not Applicable" ))
str(food_num)
food_num <- droplevels(subset(food_ave, Number_of_Jobs != "Not Applicable" ))
str(food_num)
str(food_noj)
contable <- table(food_num$Number_of_Jobs, food_num$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
str(food_noj)
contable <- table(food_num$Number_of_Jobs, food_num$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
str(food_noj)
contable <- table(food_num$Number_of_Jobs, food_num$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
contable <- table(food_num$Number_of_Jobs, food_num$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable, correct = F)
chi_test
contable_number_of_jobs <- table(food_num$Number_of_Jobs, food_num$FoodSecurity_score)
xkabledply(contable)
## Chi-Square Test
chi_test <- chisq.test(contable_number_of_jobs, correct = F)
chi_test
edu_freq <- as.data.frame(table(food_ave$Education_Level))
edu_freq
food_edu <- droplevels(subset(food_ave, Education_Level != "Not Applicable" ))
str(food_edu)
edu_freq <- as.data.frame(table(food_edu$Education_Level))
edu_freq
plot(food_edu$Education_Level)
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
plot(food_edu$Education_Level, color = "blue")
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
plot(food_edu$Education_Level, fill = "blue")
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
plot(food_edu$Education_Level)
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
plot(food_edu$Education_Level)
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
plot(food_edu$Education_Level)
ggplot(food_edu) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(food_edu, aes(x = Education_Level, fill = FoodSecurity_score)) + geom_bar(position = "fill") + labs( x = " " , y = " ", title = "Food Security Score on Education Level")
str(food_edu)
ggplot(subset(food_ave, Education_Level == "less Than 1st Grade")) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '1st, 2nd, 3rd Or 4th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '5th Or 6th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '7th Or 8th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '9th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '10th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '11th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == '12th Grade No Diploma')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'High School Grad-Diploma Or Equiv (Ged)')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Some College But No Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Associate Degree-Occupational/Vocational')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Associate Degree-Academic Program')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Bachelors Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Masters Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Professional School Deg ')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_ave, Education_Level == 'Doctorate Degree ')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
str(food_edu$Education_Level)
summary(food_edu$Education_Level)
ggplot(subset(food_edu, Education_Level == 'less Than 1st Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '1st, 2nd, 3rd Or 4th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '5th Or 6th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '7th Or 8th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '9th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '10th Grade’')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '11th Grade')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == '12th Grade No Diploma')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'High School Grad-Diploma Or Equiv (Ged)')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Some College But No Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Associate Degree-Occupational/Vocational')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Associate Degree-Academic Program')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Bachelors Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Masters Degree')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Professional School Deg ')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
ggplot(subset(food_edu, Education_Level == 'Doctorate Degree ')) +
geom_bar(aes(x = Education_Level, fill = FoodSecurity_score), position = "dodge") +
xlab("Education") + ylab("Count")
contable_edu <- table(food_ave$Education_Level, food_ave$FoodSecurity_score)
xkabledply(contable_edu)
## Chi-Square Test
chi_test <- chisq.test(contable_edu, correct = F)
chi_test
contable_edu <- table(food_ave$Education_Level, food_ave$FoodSecurity_score)
xkabledply(contable_edu)
## Chi-Square Test
chi_test <- chisq.test(contable_edu, correct = F)
chi_test
plot(food_ave$Hours_on_Jobs)
ggplot(food_ave) +
geom_bar(aes(x = Hours_on_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
vary_hours <- nrow(food_ave[food_ave$Hours_on_Jobs == -4,])
vary_hours
plot(food_ave$Hours_on_Jobs)
ggplot(food_ave) +
geom_bar(aes(x = Hours_on_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
food_hoj <- droplevels(subset(food_ave, Hours_on_Jobs != -4 ))
str(food_hoj)
hoj_freq <- as.data.frame(table(food_hoj$Education_Level))
hoj_freq
food_hoj <- droplevels(subset(food_ave, Hours_on_Jobs != -4 ))
str(food_hoj)
hoj_freq <- as.data.frame(table(food_hoj$Hours_on_Jobs))
hoj_freq
food_hoj <- droplevels(subset(food_ave, Hours_on_Jobs != -4 ))
str(food_hoj)
hoj_freq <- as.data.frame(table(food_ave$Hours_on_Jobs))
hoj_freq
food_hoj <- droplevels(subset(food_ave, Hours_on_Jobs != -4 ))
str(food_hoj)
hoj_freq <- as.data.frame(table(food_ave$Hours_on_Jobs))
hoj_freq
plot(food_hoj$Hours_on_Jobs)
ggplot(food_hoj) +
geom_bar(aes(x = Hours_on_Jobs, fill = FoodSecurity_score), position = "dodge") +
xlab("Jobs") + ylab("Count")
ggplot(food_ave, aes(Hours_on_Jobs, fill = FoodSecurity_score)) +
geom_histogram(binwidth=5)
ggplot(food_ave, aes(Hours_on_Jobs)) +
geom_freqpoly(binwidth=1)
ggplot(food_ave, aes(Hours_on_Jobs, color= FoodSecurity_score)) +
geom_freqpoly(binwidth=25)
ggplot(food_ave, aes(Hours_on_Jobs, fill = FoodSecurity_score)) +
geom_histogram(binwidth=5) +
facet_wrap(~FoodSecurity_score)
ggplot(food_hoj, aes(Hours_on_Jobs, fill = FoodSecurity_score)) +
geom_histogram(binwidth=5)
ggplot(food_hoj, aes(Hours_on_Jobs)) +
geom_freqpoly(binwidth=1)
ggplot(food_hoj, aes(Hours_on_Jobs, color= FoodSecurity_score)) +
geom_freqpoly(binwidth=25)
ggplot(food_hoj, aes(Hours_on_Jobs, fill = FoodSecurity_score)) +
geom_histogram(binwidth=5) +
facet_wrap(~FoodSecurity_score)
summary(food_ave$Hours_on_Jobs)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(food_ave$Hours_on_Jobs)
ggplot(food_ave, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("red","blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
h_anova <- aov(Hours_on_Jobs ~ FoodSecurity_score, data = food_ave)
h_tuskey <- TukeyHSD(h_anova)
summary(h_anova)
h_tuskey
ggplot(food_ave, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("red","blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_ave, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
ggbetweenstats(eliminated, wool, breaks, outlier.tagging = TRUE)
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
boxplot(warpbreaks$breaks, plot=FALSE)$out
outliers <- boxplot(warpbreaks$breaks, plot=FALSE)$out
x<-warpbreaks
x<- x[-which(x$breaks %in% outliers),]
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
boxplot(warpbreaks$breaks, plot=FALSE)$out
outliers <- boxplot(warpbreaks$breaks, plot=FALSE)$out
x<-warpbreaks
x<- x[-which(x$breaks %in% outliers),]
ggplot(x, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
View(x)
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
outliers <- boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
x<-food_hoj
x<- x[-which(x$breaks %in% outliers),]
ggplot(x, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
outliers <- boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
x<-food_hoj
x<- x[-which(x$breaks %in% outliers),]
ggplot(x, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black")) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
outliers <- boxplot(food_hoj$Hours_on_Jobs, plot=FALSE)$out
x<-food_hoj
x<- x[-which(x$breaks %in% outliers),]
ggplot(x, aes(FoodSecurity_score, Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black")) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
Q <- quantile(food_hoj$Hours_on_Jobs, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(food_hoj$Hours_on_Jobs)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
eliminated<- subset(food_hoj, food_hoj$Hours_on_Jobs > (Q[1] - 1.5*iqr) & food_hoj$Hours_on_Jobs < (Q[2]+1.5*iqr))
ggplot(eliminated, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
ggplot(food_hoj, aes(x=FoodSecurity_score, y=Hours_on_Jobs)) +
geom_boxplot( colour=c("blue","violet","navy blue","black"), outlier.shape=8, outlier.size=4) +
labs(title="Boxplot for Hours on Jobs", x="Control / Treatment", y = "Hours on Job")
confint(food_hoj$Hours_on_Jobs)
l.model <- lm(Hours_on_Jobs ~ 1, food_hoj)
# Calculate the confidence interval
confint(l.model, level=0.95)
l.model <- lm(Hours_on_Jobs ~ FoodSecurity_score, food_hoj)
# Calculate the confidence interval
confint(l.model, level=0.95)
l.model <- lm(Hours_on_Jobs ~ FoodSecurity_score, food_ave)
# Calculate the confidence interval
confint(l.model, level=0.95)
l.model <- lm(Hours_on_Jobs ~ FoodSecurity_score, food_hoj)
# Calculate the confidence interval
confint(l.model, level=0.95)
l.model <- lm(FoodSecurity_score ~ Hours_on_Jobs, food_hoj)
# Calculate the confidence interval
confint(l.model, level=0.95)
h_anova <- aov(Hours_on_Jobs ~ FoodSecurity_score, data = food_ave)
h_tuskey <- TukeyHSD(h_anova)
summary(h_anova)
h_tuskey
h_anova <- aov(Hours_on_Jobs ~ FoodSecurity_score, data = food_hoj)
h_tuskey <- TukeyHSD(h_anova)
summary(h_anova)
h_tuskey
