getwd()
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
str(Food_Sec)
FS_Subset <- subset(Food_Sec, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
install.packages('tidyverse')
library(dplyr)
head(FS_Subset)
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "Counties" = "GTCO", "States" = "GESTFIPS", "Family Size" = "HRNUMHOU",	"Household Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
```{r, results='markup'}
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
```{r, results='markup'}
summary(FS_Subset$Counties)
ggplot(FS_Subset, aes(x=Counties)) + geom_bar()
head(FS_Subset)
str(FS_Subset)
summary(FS_Subset$'FoodSecurity_score')
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "Counties" = "GTCO", "States" = "GESTFIPS", "Family_Size" = "HRNUMHOU",	"Household_Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
getwd()
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
getwd()
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
str(Food_Sec)
FS_Subset <- subset(Food_Sec, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
install.packages('tidyverse')
library(dplyr)
head(FS_Subset)
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "Counties" = "GTCO", "States" = "GESTFIPS", "Family_Size" = "HRNUMHOU",	"Household_Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
```{r, results='markup'}
getwd()
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
str(Food_Sec)
FS_Subset <- subset(Food_Sec, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
getwd()
Food_Sec <-  data.frame(read.csv("dec21pub.csv"))
str(Food_Sec)
FS_Subset <- subset(Food_Sec, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
## Installng tidyverse to use dplyr to rename the columns
install.packages('tidyverse')
```{r}
head(FS_Subset)
str(FS_Subset)
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
summary(FS_Subset$'FoodSecurity_score')
summary(FS_Subset$'FoodSecurity_score')
library(ggplot2)
ggplot(FS_Subset, aes(x=FoodSecurity_score, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar()
summary(FS_Subset$'FoodSecurity_score')
food_fc <- subset(Food_Sec, HUFINAL == 001)
head(food_fc)
food_final <- subset(food_fc, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
str(food_final)
food_ave <- subset(food_final, select = c("HRHHID",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
head(food_ave)
#Now I rename the columns
colnames(food_ave) <- c("ID", "No_of_jobs","Hours_of_job","Edcation_Level","Food_Seurity_Score")
xkabledply(food_ave, title = "Data set")
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
#colnames(food_ave) <- c("ID", "No_of_jobs","Hours_of_job","Edcation_Level","Food_Seurity_Score")
#xkabledply(food_ave, title = "Data set")
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
#colnames(food_ave) <- c("ID", "No_of_jobs","Hours_of_job","Edcation_Level","Food_Seurity_Score")
#xkabledply(food_ave, title = "Data set")
head(FS_Subset)
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("ID", "States","Family_size","Household_income","Food_Seurity_Score")
#xkabledply(food_ave, title = "Data set")
food_una$States
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("ID", "States","Family_size","Household_income","Food_Seurity_Score")
xkabledply( food_una, title="Table testing2")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="sodium", ylab="calorie", col=c("purple", "orange"), main="QQ Plot for Cal vs Sodium")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  col=c("purple", "orange"), main="QQ Plot for Cal vs Sodium")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="States", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Cal vs Sodium")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="States", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Food security vs ")
hist(food_una$Food_Seurity_Score, col=("blue"),  main = "Histogram of sodium size in pizzas", xlab="sodium size")
#boxplot(pizza$sodium, col="purple", main = "Boxplot for sodium size in pizzas", ylab="sodium size")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="States", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Food security vs ")
hist(food_una$Food_Seurity_Score, colors=States,  main = "Histogram of sodium size in pizzas", xlab="sodium size")
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="States", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Food security vs ")
hist(food_una$Food_Seurity_Score, colors=food_una$States,  main = "Histogram of sodium size in pizzas", xlab="sodium size")
#boxplot(pizza$sodium, col="purple", main = "Boxplot for sodium size in pizzas", ylab="sodium size")
?hist
library(ggplot2)
ggplot(pizza, mapping=aes(x=Food_Security_Score, colour=States))+labs(title = "Scatterplot of calories vs sodium")+labs(x="sodium",y="calories")+geom_point()
library(ggplot2)
ggplot(food_una, mapping=aes(x=Food_Security_Score, colour=States))+labs(title = "Scatterplot of calories vs sodium")+labs(x="sodium",y="calories")+geom_point()
library(ggplot2)
ggplot(food_una, mapping=aes(x=food_una$Food_Security_Score, colour=States))+labs(title = "Scatterplot of calories vs sodium")+labs(x="sodium",y="calories")+geom_point()
library(ggplot2)
ggplot(food_una, mapping=aes(x=food_una$Food_Security_Score, y=food_una$States, colour=States))+labs(title = "Scatterplot of calories vs sodium")+labs(x="sodium",y="calories")+geom_point()
library(ggplot2)
ggplot(food_una, mapping=aes(x=food_una$Food_Security_Score, y=food_una$States, colour=food_una$States))+labs(title = "Scatterplot of calories vs sodium")+labs(x="sodium",y="calories")+geom_point()
library(ggplot2)
qqplot(food_una$States, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="States", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Food security vs States")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
#boxplot(pizza$sodium, col="purple", main = "Boxplot for sodium size in pizzas", ylab="sodium size")
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score", col=c("red", "blue"), main="QQ Plot for Food security vs Household income")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  main="QQ Plot for Food security vs Household income")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
?qqplot
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  color=food_una$States, main="QQ Plot for Food security vs Household income")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  colour=food_una$States, main="QQ Plot for Food security vs Household income")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of sodium size in pizzas", xlab="sodium size")
library(ggplot2)
hist(food_una$Food_Seurity_Score, col="blue",  main = "Histogram of Food security scores", xlab="Food_security_score")
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
food_una$Food_Seurity_Score
ggplot(FS_Subset, aes(x=FoodSecurity_score, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar()
library(dplyr)
library(ezids)
library(ggplot2)
Food_Sec <- data.frame(read.csv("dec21pub.csv"))
FS_Subset <- subset(Food_Sec, HRINTSTA == 001 & HRSUPINT == 001)
FS_Subset <- subset(FS_Subset, select = c("HRHHID",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "States" = "GESTFIPS", "Family_Size" = "HRNUMHOU",	"Household_Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
## Converting the all the columns to factors as they are all ordinal(except the Id, but since it's categorical i'm converting it into a factor too)
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
summary(FS_Subset$'FoodSecurity_score')
ggplot(FS_Subset, aes(x=Food_Security_score, color =Food_Security_score, fill = Food_Security_score)) + geom_bar()
ggplot(FS_Subset, aes(x=FoodSecurity_score, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar()
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("Id", "States","Family_Size","Household_Income","FoodSeurity_Score")
#xkabledply( food_una, title="Table testing2")
library(ggplot2)
qqplot(food_una$Household_income, food_una$Food_Seurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
food_una
library(ggplot2)
qqplot(food_una$Household_income, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("Id", "States","Family_Size","Household_Income","FoodSeurity_Score")
#xkabledply( food_una, title="Table testing2")
food_fc <- subset(Food_Sec, HUFINAL == 001)
head(food_fc)
food_final <- subset(food_fc, select = c("HRHHID",	"GTCO",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
str(food_final)
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("Id", "States","Family_Size","Household_Income","FoodSeurity_Score")
#xkabledply( food_una, title="Table testing2")
food_una <- subset(food_final, select = c("HRHHID",	"GESTFIPS", "HRNUMHOU",	"HEFAMINC", "HRFS12MD"))
head(food_una)
#Now I rename the columns
colnames(food_una) <- c("Id", "States","Family_Size","Household_Income","FoodSeurity_Score")
#xkabledply( food_una, title="Table testing2")
library(ggplot2)
qqplot(food_una$Household_income, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
library(ggplot2)
qqplot(food_una$Household_Income, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
food_una$Family_Size
str(food_una$Family_Size)
ggplot(food_una, aes(x=Family_Size, color =Family_size, fill = Family_size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color =Family_size)) + geom_bar()
ggplot(food_una, aes(x=food_una$Family_Size, color =Family_size)) + geom_bar()
ggplot(food_una, aes(x=food_una$Family_Size, color = food_una$Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, colour = Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size, fill= Family_Size)) + geom_bar()
?ggplot
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_bar(colour="blue")
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_box()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_point()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_rect(aes(colour = Family_Size, fill = Family_Size)) +
xlab("number of obs") +
ylab("value")
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_rect(aes(colour = Family_Size, fill = Family_Size)) +
xlab("number of obs") +
ylab("value") )
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_rect(aes(colour = Family_Size, fill = Family_Size)) +
xlab("number of obs") +
ylab("value")
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_rect(aes(colour = Family_Size, fill = Family_Size))
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_rect()
ggplot(food_una, aes(x=Family_Size, color = Family_Size)) + geom_bar()
library(ggplot2)
qqplot(food_una$Household_Income, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
summary(food_una$Family_Size)
str(food_una$Family_Size)
summary(FS_Subset$Family_Size)
summary(food_una$Family_Size)
summary(FS_Subset$Family_Size)
35*50
ggplot(food_una, aes(x=Family_Size, color = Family_Size, labels(Family_size))) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size, labels(Family_Size)) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size, label=Family_Size) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size, label=Family_Size) + geom_bar()
ggplot(FS_Subset$Family_Size, aes(x=Family_Size, color = Family_Size, label=Family_Size) + geom_bar()
str(food_una)
library(ggplot2)
qqplot(food_una$Household_Income, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
ggplot(FS_Subset, aes(x=Family_Size, color = Family_Size, label=Family_Size) + geom_bar()
ggplot(FS_Subset, aes(x=Family_Size, color = Family_Size) + geom_bar()
ggplot(data=data_una, aes(Family_size)) +
geom_histogram(breaks=seq(150, 300, by = 10),
col="red",
fill="green",
alpha = .7) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_size)) +
geom_histogram(breaks=seq(150, 300, by = 10),
col="red",
fill="green",
alpha = .7) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(breaks=seq(150, 300, by = 10),
col="red",
fill="green",
alpha = .7) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="red",
fill="green",
alpha = .7) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(FS_Subset, aes(x=Family_Size, color = Family_Size) + geom_bar()
ggplot(food_una, aes(x=Family_Size, color = Family_Size) + geom_bar()
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="red",
fill="green",
alpha = .3) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="red",
fill="green",
alpha = .7) + # opacity
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="red",
fill="green") +
labs(title="Baseball player weight histogram using `ggplot`") +
labs(x="weight (lbs)", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="red",
fill="green") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="blue",
fill="blue") + label(Family_Size)+
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="blue",
fill="blue") + label("Family_Size")+
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size, label=Family_Size)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size, label=y)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size, label=Family_Size)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size, color=Family_Size)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
ggplot(data=food_una, aes(Family_Size)) +
geom_histogram(col="blue",
fill="blue") +
labs(title="Family size histogram") +
labs(x="Family size", y="Frequency")
# loadPkg("ggplot2")
ggplot(data=food_una)+
geom_point(mapping = aes(x=Family_Size, y=FoodSeurity_Score, color=Family_Size)+
ggtitle("Scatter plot of Calorie content vs sodium for different pizza brands")+
labs(x="Sodium", y = "Calorie")
# loadPkg("ggplot2")
ggplot(data=food_una)+
geom_point(mapping = aes(x=food_una$Family_Size, y=food_una$FoodSeurity_Score, color=food_una$Family_Size)+
ggtitle("Scatter plot of Calorie content vs sodium for different pizza brands")+
labs(x="Sodium", y = "Calorie")
# loadPkg("ggplot2")
ggplot(data=food_una)+
geom_point(mapping = aes(x=food_una$Family_Size, y=food_una$FoodSeurity_Score, color=food_una$Family_Size)+
ggtitle("Scatter plot of Calorie content vs sodium for different pizza brands")+
labs(x="Sodium", y = "Calorie")
# loadPkg("ggplot2")
ggplot(data=food_una)+
geom_point(mapping = aes(x=food_una$Family_Size, y=food_una$FoodSeurity_Score, color=food_una$Family_Size)+
ggtitle("Scatter plot of Calorie content vs sodium for different pizza brands")+
labs(x="Sodium", y = "Calorie"))
# loadPkg("ggplot2")
ggplot(data=food_una)+
geom_point(mapping = aes(x=Family_Size, y=FoodSeurity_Score, color=Family_Size)+
ggtitle("Scatter plot of Calorie content vs sodium for different pizza brands")+
labs(x="Sodium", y = "Calorie"))
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$States, main="QQ Plot for Food security vs Household income")
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  col=food_una$Family_Size, main="QQ Plot for Food security vs Household income")
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Family size", ylab="Food security Score",  col=food_una$Family_Size, main="QQ Plot for Food security vs Family")
summary(FS_Subset$Family_Size)
proportions <- table(food_una$Family_size)/length(food_una$Family_size)
percentages <- proportions*100
percentages
df <- FS_Subset %>%
group_by(FoodSecurity_score) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(df, aes(x = "", y = perc, fill = FoodSecurity_score)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
levels(FS_Subset$'Ethnicity') <- c('White only', 'Black only', 'American Indian, Alaskan native only', 'Asian Only', 'Hawaiian', 'White-black', 'White-AI', 'White-Asian', 'White-HP', 'Black-AI', 'Black-Asian', 'Black-HP', 'AI-Asian', 'AI-HP', 'Asian-HP', 'W-B-AI', 'W-B-A', 'W-B-HP', 'W-AI-A', 'W-AI-HP', 'W-A-HP', 'B-AI-A', 'W-B-AL-A', 'W-AI-A-HP', 'Other 3 race combo', 'Other 4 and 5 race combo')
summary(FS_Subset$'Ethnicity', title = "PTDTRACE")
summary(FS_Subset$'SNAP', title = "HESP1")
levels(FS_Subset$'Citizenship_status') <- c('NATIVE, BORN IN THE UNITED STATES', 'NATIVE, BORN IN PUERTO RICO OR OTHER U.S. ISLAND AREAS', 'NATIVE, BORN ABROAD OF AMERICAN PARENT OR PARENTS', 'FOREIGN BORN, U.S. CITIZEN BY NATURALIZATION', 'FOREIGN BORN, NOT A CITIZEN OF THE UNITED STATES')
summary(FS_Subset$'Citizenship_status', title = "PRCITSHP")
for(i in levels(FS_Subset$Ethnicity)){
print(ggplot(subset(FS_Subset, Ethnicity == i ) , aes(x= Ethnicity, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge"))
}
for(i in levels(FS_Subset$Citizenship_status)){
print(ggplot(subset(FS_Subset, Citizenship_status == i ) , aes(x= Citizenship_status, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge"))
}
FS_Subset <- subset(Food_Sec, HRINTSTA == 001 & HRSUPINT == 001)
FS_Subset <- subset(FS_Subset, select = c("HRHHID",	"GESTFIPS",	"HRNUMHOU",	"HEFAMINC",	"HESP1",	"PTDTRACE",	"PRCITSHP",	"PEMJNUM",	"PEHRUSL1",	"PEEDUCA", "HRFS12MD"))
FS_Subset <- FS_Subset %>% rename("Id" = "HRHHID", "States" = "GESTFIPS", "Family_Size" = "HRNUMHOU",	"Household_Income" = "HEFAMINC",	"SNAP" = "HESP1",	"Ethnicity" =	"PTDTRACE", "Citizenship_status" = "PRCITSHP",	"Number_of_Jobs" = "PEMJNUM",	"Hours_on_Jobs" = "PEHRUSL1" , "Education_Level" = "PEEDUCA" , "FoodSecurity_score" = "HRFS12MD")
## Converting the all the columns to factors as they are all ordinal(except the Id, but since it's categorical i'm converting it into a factor too)
FS_Subset[] <- lapply( FS_Subset, factor)
str(FS_Subset)
for(i in levels(FS_Subset$Citizenship_status)){
print(ggplot(subset(FS_Subset, Citizenship_status == i ) , aes(x= Citizenship_status, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge"))
}
levels(FS_Subset$States)
levels(FS_Subset$'States) <- c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY' )
levels(FS_Subset$'States') <- c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY' )
summary(FS_Subset$'States', title = "GESTFIPS")
for(i in levels(FS_Subset$States)){
print(ggplot(subset(FS_Subset, States == i ) , aes(x= States, color =FoodSecurity_score, fill = FoodSecurity_score)) + geom_bar( aes(y = (..count..)/sum(..count..)*100), position = "dodge"))
}
?map_data
US<-map_data("state")
install.packages("maps")
US<-map_data("state")
ggplot(US, aes(x=long, y=lat, group=group))+
geom_polygon(fill="white", color="black")
state_fs<-subset(FS_Subset, select = c("States", "FoodSecurity_Score"))
state_fs<-subset(FS_Subset, select = c(FS_Subset$States, FS_Subset$FoodSecurity_score))
state_fs<-subset(FS_Subset, select = c("FS_Subset$States", "FS_Subset$FoodSecurity_score"))
state_fs<-subset(Subset$States, FS_Subset$FoodSecurity_score)
?subset
state_fs<-subset(FS_Subset$States, FS_Subset$FoodSecurity_score)
state_fs<-subset(FS_Subset, select(FS_Subset$States, FS_Subset$FoodSecurity_score))
state_fs<-subset(FS_Subset, select=c(FS_Subset$States, FS_Subset$FoodSecurity_score))
x<-gl(2,4,8)
levels(x)[1]<-"low"
levels(x)[2]<-"high"
x
?gl
?subset
state_fs<-subset(FS_Subset, FS_Subset$States:FS_Subset$FoodSecurity_score)
state_fs<-subset(FS_Subset$States, FS_Subset$FoodSecurity_score)
plot_usmap(data=FS_Subset$FoodSecurity_score, values="FS", labels=TRUE)
?plot_usmap
??plot_uspam
??plot_usmap
?plot_map
install.packages("usmap")
install.packages("lubridate")
install.packages("ggplot2")
install.packages("data.table")
install.packages("ggrepel")
install.packages("dplyr")
install.packages("data.table")
>str(FS_Subset$Family_Size)
str(FS_Subset$Family_Size)
head(FS_Subset$Family_Size)
summary(FS_Subset$Family_Size)
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Family size", ylab="Food security Score",  col=food_una$Family_Size, main="QQ Plot for Food security vs Family")
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score,  xlab="Family size", ylab="Food security Score",  col=food_una$Family_Size, main="QQ Plot for Food security vs Family")
library(ggplot2)
qqplot(food_una$Family_Size, food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Family size", ylab="Food security Score",  col=food_una$Family_Size, main="QQ Plot for Food security vs Family")
Food_Sec$PERRP
Food_Sec$PERRP=48
child_fam<-Food_Sec$PERRP=48
child_fam<-subset(Food_Sec, PERRP==48)
child_fam
str(child_fam)
child_fam<-subset(Food_Sec, PERRP==48, select = c(HRHHID, PERRP))
child_fam
?groupby
group_by
?group_by
by_id<-child_fam %>% group_by(HRHHID, PERRP)
by_id<-child_fam %>% group_by(HRHHID)
child_fam<-subset(Food_Sec, PERRP==48, select = c(HRHHID, PERRP))
by_child_id <- child_fam %>%
group_by(HRHHID) %>% # Variable to be transformed
count() %>%
library(dbplyr)
install.packages(dbplyr)
install.packages(dbplyr)
library(dplyr)
library(ezids)
library(ggplot2)
libary(dplyr)
#install.packages("maps")
US<-map_data("state")
ggplot(US, aes(x=States, fill= FoodSecurity_score))+
geom_polygon(fill="white", color="black")
table(Food_sec, PRNMCHLD)
table(FS_Subset, PRNMCHLD)
table(FS_Subset, PRNMCHLD)
table(FS_Subset$PRNMCHLD)
str(FS_Subset$PRNMCHLD)
child_fam<-subset(Food_Sec, PRNMCHLD, select = c(HRHHID, PRNMCHLD))
child_fam<-subset(Food_Sec, PRNMCHLD==0, select = c(HRHHID, PRNMCHLD))
#table(FS_Subset, PRNMCHLD)
child_fam
childless_fam<-subset(Food_Sec, PRNMCHLD==0, select = c(HRHHID, PRNMCHLD))
#table(FS_Subset, PRNMCHLD)
childless_fam<-subset(Food_Sec, PRNMCHLD==0, select = c(HRHHID, PRNMCHLD))
#library(ggplot2)
qqplot(childless_fam$PRNMCHLD,food_una$FoodSeurity_Score, plot.it = TRUE,  xlab="Household income", ylab="Food security Score",  main="QQ Plot for Food security vs Household income")
